% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/downloadableReactTable.R
\name{downloadableReactTable}
\alias{downloadableReactTable}
\title{downloadableReactTable module server function}
\usage{
downloadableReactTable(
  id,
  table_data,
  selection_mode = NULL,
  pre_selected_rows = NULL,
  file_name_root = "data_file",
  download_data_fxns = NULL,
  enale_pagination = FALSE,
  table_height = 600,
  show_rownames = FALSE,
  enable_columns_filter = FALSE,
  enable_global_search = TRUE,
  row_highlight = TRUE,
  striped = TRUE,
  logger = NULL
)
}
\arguments{
\item{id}{the ID of the Module's UI element}

\item{table_data}{reactive expression (or parameter-less function) that acts as table data source}

\item{selection_mode}{to enable row selection, set \code{selection_mode} value to either "single" for single row
selection or "multiple" for multiple rows selection, case insensitive. Any other value will
disable row selection, (default = NULL). An additional column will be added to the table if
selection mode is enabled with radio buttons for single row selection and checkboxes for
"multiple" rows selection mode.}

\item{pre_selected_rows}{reactive expression (or parameter-less function) provides the rows indices of the rows to
be selected when the table is rendered. If selection_mode is disabled, this parameter will
have no effect. If selection_mode is "single" only first row index will be used.}

\item{file_name_root}{the base text used for user-downloaded file. It can be either a character string,
a reactive expression or a function returning a character string (default = 'data_file')}

\item{download_data_fxns}{a \strong{named} list of functions providing the data as return values.
The names for the list should be the same names that were used when the table UI was created}

\item{enale_pagination}{to enable table pagination (default = FALSE)}

\item{table_height}{max table height in pixels. Vertical scroll will be shown after that height value}

\item{show_rownames}{enable displaying rownames as a separate column (default = FALSE)}

\item{enable_columns_filter}{enable each column own filter input in the table (default = FALSE)}

\item{enable_global_search}{enable table global searching input to search and filter in all columns at once
(default = TRUE)}

\item{row_highlight}{enable highlighting rows upon mouse hover}

\item{striped}{add zebra-striped style to table rows}

\item{logger}{logger to use}
}
\value{
Rendered react table
}
\description{
Server-side function for the downloadableReactTableUI.
}
\section{Shiny Usage}{

This function is not called directly by consumers - it is accessed in
server.R using the same id provided in \code{downloadableReactTableUI}:

\strong{\code{downloadableReactTable(id)}}
}

\examples{
if (interactive()) {
 library(shiny)
 library(periscope2)
 shinyApp(ui = fluidPage(fluidRow(column(width = 12,
    downloadableReactTableUI("object_id1",
                             downloadtypes = c("csv", "tsv"),
                             hovertext     = "Download the data here!")))),
         server = function(input, output) {
           downloadableReactTable(id                = "object_id1",
                                  table_data        = reactiveVal(mtcars),
                                  selection_mode    = "multiple",
                                  pre_selected_rows = function() {c(1, 3, 5)})})
}

}
\seealso{
\link[periscope2]{downloadableReactTableUI}

\link[periscope2]{downloadFileButton}

\link[periscope2]{logViewerOutput}

\link[periscope2]{downloadFile}

\link[periscope2]{downloadFile_ValidateTypes}

\link[periscope2]{downloadFile_AvailableTypes}

\link[periscope2]{downloadablePlot}
}
