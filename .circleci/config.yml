# Notes:
# - Docker containers with R, etc. provided by rocker.  See <https://hub.docker.com/r/rocker/verse>.
# - Builds attempted for 4.0.5, and the *latest* R edition supported by rocker.

version: 2.1

workflows:

  version: 2
  Prepare-All-R-Editions:
    jobs:
      - Build-for-r4_0_5
      - Build-for-rLATEST

jobs:

  Build-for-r4_0_5:
    docker:
      - image: rocker/verse:4.0.5

    steps:
      - checkout
      - run:
          name: Review checkout
          command: ls -la

      - run:
          name: Install Linux dependencies
          command: |
            sudo apt-get update -y
            sudo apt-get install -yq texlive-fonts-recommended
            sudo apt-get install -yq texlive-fonts-extra

      - run:
          name: Install R dependencies
          command: |
            R -e 'install.packages("shiny", repos = "https://cran.rstudio.com/")'
            R -e 'install.packages("bs4Dash", repos = "https://cran.rstudio.com/")'
            R -e 'install.packages(c("shinyWidgets", "yaml", "DT", "writexl", "fresh", "miniUI", "shinyFeedback"))'
            R -e 'install.packages(c("canvasXpress", "waiter", "shinyjs", "openxlsx", "spelling", "colourpicker", "lifecycle"))'
            R -e 'install.packages("reactable")'
            R -e 'install.packages("openxlsx2", repos = "https://cloud.r-project.org")'

      - run:
          name: Session information and installed package versions
          command: |
            Rscript -e 'sessionInfo()'
            Rscript -e 'installed.packages()[, c("Package", "Version")]'
            Rscript -e 'rmarkdown::pandoc_version()'

      - run:
          name: Build package
          command: R CMD build .

      - run:
          name: Run Tests with Detailed Output
          command: |
             Rscript -e "
                library(testthat)
                library(devtools)

                test_files <- list.files('tests/testthat', pattern = '^test-.*\\\\.R$', full.names = TRUE)
                failed_files <- character(0)

                for (test_file in test_files) {
                    cat('\\n=== Testing:', basename(test_file), '===\\n')

                    result <- try({
                       test_results <- test_file(test_file, reporter = 'progress')
                       if (any(test_results\$failed > 0)) {
                           failed_files <- c(failed_files, basename(test_file))
                           cat('‚ùå FAILED:', basename(test_file), '\\n')
                       } else {
                          cat('‚úÖ PASSED:', basename(test_file), '\\n')
                       }
                    }, silent = FALSE)

                    if (inherits(result, 'try-error')) {
                        failed_files <- c(failed_files, basename(test_file))
                        cat('üí• ERROR in', basename(test_file), '\\n')
                        cat('Error message:', as.character(result), '\\n')
                        break  # Stop on first error to see the details
                    }
                  }

               if (length(failed_files) > 0) {
                    cat('\\n‚ùå Failed files:', paste(failed_files, collapse = ', '), '\\n')
                    quit(status = 1)
               }
             "

      - run:
          name: Check package
          command: |
            # Install suggested packages
            R -e 'install.packages("png")'
            # Perform package check
            R CMD check *tar.gz


  Build-for-rLATEST:
    docker:
      - image: rocker/verse:latest

    steps:
      - checkout
      - run:
          name: Review checkout
          command: ls -la

      - run:
          name: Install Linux dependencies
          command: |
            sudo apt-get update -y
            sudo apt-get install -yq texlive-fonts-recommended
            sudo apt-get install -yq texlive-fonts-extra

      - run:
          name: Install R dependencies
          command: |
            R -e 'install.packages(c("bs4Dash", "shinyWidgets", "yaml", "DT", "writexl", "fresh", "miniUI", "shinyFeedback"))'
            R -e 'install.packages(c("canvasXpress", "waiter", "shinyjs", "openxlsx",  "openxlsx2", "spelling", "colourpicker", "lifecycle"))'
            R -e 'install.packages("covr")'
            R -e 'install.packages("reactable")'

      - run:
          name: Session information and installed package versions
          command: |
            Rscript -e 'sessionInfo()'
            Rscript -e 'installed.packages()[, c("Package", "Version")]'
            Rscript -e 'rmarkdown::pandoc_version()'

      - run:
          name: Build package
          command: R CMD build .

      - run:
          name: Check coverage
          command: Rscript -e 'library(covr); codecov(quiet = FALSE)'

      - run:
          name: Check package
          command: |
            # Install suggested packages
            R -e 'install.packages("png")'
            # Perform package check
            R CMD check *tar.gz

