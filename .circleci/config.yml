# Notes:
# - Docker containers with R, etc. provided by rocker.  See <https://hub.docker.com/r/rocker/verse>.
# - Builds attempted for 4.0.5, and the *latest* R edition supported by rocker.

version: 2.1

workflows:

  version: 2
  Prepare-All-R-Editions:
    jobs:
      - Build-for-r4_0_5
      - Build-for-rLATEST

jobs:

  Build-for-r4_0_5:
    docker:
      - image: rocker/verse:4.0.5

    steps:
      - checkout
      - run:
          name: Review checkout
          command: ls -la

      - run:
          name: Install Linux dependencies
          command: |
            sudo apt-get update -y
            sudo apt-get install -yq texlive-fonts-recommended
            sudo apt-get install -yq texlive-fonts-extra

      - run:
          name: Install R dependencies
          command: |
            R -e 'install.packages("shiny", repos = "https://cran.rstudio.com/")'
            R -e 'install.packages("bs4Dash", repos = "https://cran.rstudio.com/")'
            R -e 'install.packages(c("shinyWidgets", "yaml", "DT", "writexl", "fresh", "miniUI", "shinyFeedback"))'
            R -e 'install.packages(c("canvasXpress", "waiter", "shinyjs", "openxlsx", "spelling", "colourpicker", "lifecycle"))'
            R -e 'install.packages("reactable")'
            R -e 'install.packages("openxlsx2", repos = "https://cloud.r-project.org")'

      - run:
          name: Session information and installed package versions
          command: |
            Rscript -e 'sessionInfo()'
            Rscript -e 'installed.packages()[, c("Package", "Version")]'
            Rscript -e 'rmarkdown::pandoc_version()'

      - run:
          name: Build package
          command: R CMD build .

      - run:
          name: Check package
          command: |
            # Install suggested packages
            R -e 'install.packages("png")'
            echo "=== Starting comprehensive package check ==="

            # Set environment variables for maximum detail
            export _R_CHECK_TESTS_NLINES_=0
            export _R_CHECK_FORCE_SUGGESTS_=false
            export TESTTHAT_PROGRESS_FULL=true

            # Run the check
            R CMD check --as-cran --no-manual *tar.gz

            # Analyze results
            CHECK_DIR=$(ls -d *.Rcheck)
            echo "=== Check directory: $CHECK_DIR ==="

            # Check the main log
            if [[ -f "$CHECK_DIR/00check.log" ]]; then
            echo "=== Main check log ==="
            cat "$CHECK_DIR/00check.log"
              fi

              # Check for test failures
              if [[ -d "$CHECK_DIR/tests" ]]; then
                echo "=== Test directory contents ==="
                ls -la "$CHECK_DIR/tests/"

                # Show all test output files
                for test_file in "$CHECK_DIR/tests"/*.Rout*; do
                  if [[ -f "$test_file" ]]; then
                    echo "=== Test output: $(basename $test_file) ==="
                    cat "$test_file"
                    echo "=== End of $(basename $test_file) ==="
                  fi
                done
              fi

              # Check overall status
              if grep -q "Status.*ERROR" "$CHECK_DIR/00check.log"; then
                echo "❌ PACKAGE CHECK FAILED"
                exit 1
              else
                echo "✅ PACKAGE CHECK PASSED"
              fi


  Build-for-rLATEST:
    docker:
      - image: rocker/verse:latest

    steps:
      - checkout
      - run:
          name: Review checkout
          command: ls -la

      - run:
          name: Install Linux dependencies
          command: |
            sudo apt-get update -y
            sudo apt-get install -yq texlive-fonts-recommended
            sudo apt-get install -yq texlive-fonts-extra

      - run:
          name: Install R dependencies
          command: |
            R -e 'install.packages(c("bs4Dash", "shinyWidgets", "yaml", "DT", "writexl", "fresh", "miniUI", "shinyFeedback"))'
            R -e 'install.packages(c("canvasXpress", "waiter", "shinyjs", "openxlsx",  "openxlsx2", "spelling", "colourpicker", "lifecycle"))'
            R -e 'install.packages("covr")'
            R -e 'install.packages("reactable")'

      - run:
          name: Session information and installed package versions
          command: |
            Rscript -e 'sessionInfo()'
            Rscript -e 'installed.packages()[, c("Package", "Version")]'
            Rscript -e 'rmarkdown::pandoc_version()'

      - run:
          name: Build package
          command: R CMD build .

      - run:
          name: Check coverage
          command: Rscript -e 'library(covr); codecov(quiet = FALSE)'

      - run:
          name: Check package
          command: |
            # Install suggested packages
            R -e 'install.packages("png")'
            # Perform package check
            R CMD check *tar.gz

